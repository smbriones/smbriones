---
layout: web-type
---

<div class="hero">
  <div class="container">
    <h1 class="title"><span>Practical</span> Web Typography</h1>
    <p>
      A small collection of principals, tips, and thoughts on typography for
      the web gathered by <a href="http://stephaniebriones.com">Stephanie Briones</a>.
    </p>
  </div>
</div>

<section class="content">
  <div class="container">
    <h4>1. Units of Measure</h4>
  </div>
</section>

<section class="slide be-concise">
  <div class="container">
    <h1>px</h1>
  </div>
  <div class="container">
    <div class="column half">
      <h3>The Good</h3>
      <ul>
        <li>A pixel is an absolute measurement</li>
        <li>JavaScript speaks in pixels</li>
      </ul>
    </div>
    <div class="column half">
      <h3>The Bad</h3>
      <ul>
        <li>Scaling sizes up and down isnâ€™t as simple</li>
        <li>They no longer look the same on every screen</li>
      </ul>
    </div>
  </div>
</section>

<section class="slide">
  <div class="container">
    <h1>em</h1>
  </div>
  <div class="container">
    <div class="column half">
      <h3>The Good</h3>
      <ul>
        <li>Ems are relative</li>
        <li>They have no problem scaling up and down in size with CSS</li>
      </ul>
    </div>
    <div class="column half">
      <h3>The Bad</h3>
      <ul>
        <li>Ems are relative</li>
        <li>Font sizes compound</li>
      </ul>
    </div>
  </div>
</section>

<section class="slide">
  <div class="container">
    <h2>Relative Sizing</h2>
    <p>
      In this example, we have a parent list, and nested list inside of it. In our
      styles, we've set li's to be 1.4em.
    </p>
    <script src="https://gist.github.com/smbriones/6e1bdb51c9c2274125fdc5763570b5a6.js"></script>

    <h2>Compounding</h2>
    <p>
      Though we've set list items to be 1.4em, because of compounding that occurs with
      ems, our nested list item has to now be multiplied by the parent's 1.4em to get its
      size. That makes the nested li the equivelent of 20px, rather than 14px.
    </p>
    <script src="https://gist.github.com/smbriones/5d2215b9650ce208a3246df9bfa11fd7.js"></script>
  </div>
</section>

<section class="slide">
  <div class="container">
    <h1>rem</h1>
  </div>
  <div class="container">
    <div class="column half">
      <h3>The Good</h3>
      <ul>
        <li>Like em, but relative only to the root element</li>
      </ul>
    </div>
    <div class="column half">
      <h3>The Bad</h3>
      <ul>
        <li>Not completely supported by all browsers</li>
        <li>A little buggy</li>
      </ul>
      <p>Check out current <a href="http://caniuse.com/#feat=rem">browser support and known issues</a>.</p>
    </div>
  </div>
</section>

<section class="slide">
  <div class="container">
    <h3>Relative to html element</h3>
    <p>
      Using rems instead of ems in this example means that instead of looking
      to the direct parent to calculate their size, elements are relative to the
      html element. This provides a little more control since the base size is
      static and maintainable from one place.
    </p>
    <script src="https://gist.github.com/smbriones/d09f1fa5d5b45b689674fe598cfb425a.js"></script>
</section>

<section class="content">
  <div class="container">
    <h4>2. Weights &amp; Styles</h4>
  </div>
</section>

<section class="content">
  <div class="container">
    <h4>3. Base Styles</h4>
  </div>
</section>

<section class="content">
  <div class="container">
    <h4>4. Color and Contrast</h4>
  </div>
</section>

<section class="content">
  <div class="container">
    <h4>5. Alignment</h4>
  </div>
</section>

<section class="content">
  <div class="container">
    <h4>6. Content</h4>
  </div>
</section>

<section class="content">
  <div class="container">
    <h4>7. Resources</h4>
  </div>
</section>

<!--
<section>
    <ul class="contents">
      <li class="section-title one"><h4>Basics</h4></li>
      <li class="section-title two"><h4>Style Points</h4></li>
      <li class="section-title three"><h4>Extra Credit</h4></li>
    </ul>
</section>
-->
