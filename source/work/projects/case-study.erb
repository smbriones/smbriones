---
title: sb Â· Wise Support
---

<%= partial "partials/header" %>

<div class="container">
  <div class="project-title">
    <h1>Wise Support</h1>
    <span class="divide"></span>
  </div>

  <p class="project-tags">
    <span class="tag type">UX</span>
    <span class="tag type">Visual Design</span>
    <span class="tag type">Branding</span>
    <span class="tag type">HTML</span>
    <span class="tag type">CSS</span>
  </p>

  <div class="project-description">
    <h5>The Product</h5>
    <p>
      <a href="http://support.wise.io">Wise.io</a> uses machine learning to help
      companies prioritize, organize, and gain insights from help tickets. One
      of the more critical experiences in the application is the sign up process.
    </p>
    <p>
      This workflow was designed to be as simple and painless as possible to help
      the customer train custom machine learning models for their data. Once the
      machine learning models are trained, Wise Support provides insights and helps
      prioritize customer service issues by evaluating and ranking common issues
      derived from their customer support tickets.
    </p>
    <img src="/work/projects/assets/ws-insights.png" />
    <p class="caption">Screenshot of Insights on the Wise Support dashboard.</p>
    <h5>The Problem</h5>
    <p>
      Because the customer is responsible for some important tasks during this process,
      we knew that it needed be as few steps as possible, without being overwhelming.
      In order for a customer to complete the sign up process, they are required to
      complete the following steps:
    </p>
    <p class="step">1. Create an account by providing an email address, username, and
    password</p>
    <p>
      A new Wise Support customer needs to provide not only their name and contact
      information at sign up, but they are also required to connect their
      customer support software using their credentials or by using an API key
      to authenticate.
    </p>
    <img src="/work/projects/assets/sign-up-1.png" />
    <p class="caption">Wireframe for the Create an Account form.</p>
    <p class="step">2. Select the service, (Zendesk, Service Cloud, etc)</p>
    <p>
      At the time, there were only a few services being used, however we wanted to
      make sure that the layout and flow would hold up as that list of services grew
      over time.
    </p>
    <img src="/work/projects/assets/sign-up-2.png" />
    <p class="caption">Wireframe to illustrate selecting a data source.</p>
    <p class="step">3. Authenticate using their credentials or API key</p>
    <p>
      In order to get value out of the application, Wise Support needs permission
      to access the customer's data. Once they authenticate, Wise Support begins
      pulling in their data.
    </p>
    <img src="/work/projects/assets/sign-up-3.png" />
    <p class="caption">Wireframe for the Zendesk authentication form.</p>
    <p class="step">4. Select the attributes from their data that are most relevant</li>
    <p>
      This step requires the customer to take a good look at their data and the list
      of attributes that they have. These attributes come from their help desk app
      settings. They need to decide which parts of the data they want to receive insights
      and predictions on. Whatever they choose becomes their model, and selecting the
      attributes helps to train the model.
    </p>
    <img src="/work/projects/assets/sign-up-4.png" />
    <p class="caption">Wireframe for selecting attributes and selecting a range of data.</p>
    <p class="step">5. Visit the dashboard to view the results</li>
    <p>
      When the model finishes building, they are finally taken to their dashboard to
      view the results. They now have access to interactive charts and tables that
      allow them to analyze their data in new and interesting ways.
    </p>
    <img src="/work/projects/assets/sign-up-5.png" />
    <p class="caption">Wireframe to illustrate completing the process and arriving on the dashboard.</p>
    <h5>The Process</h5>
    <p>
      I worked directly with the VP of Product to design the user experience and
      user interface of the application. He demoed the application with customers
      almost daily, so we received feedback early and frequently. This project
      was not quite like any other I had ever worked on. Instead of weekly
      iterations, we had daily ones. We might address a problem in the morning,
      and have a solution in place that afternoon.
    </p>
    <p>
      This process was more free-form than the traditional agile process I usually
      follow. A staple in this process for allowing daily iteration was the low fidelity
      wireframes I created in Balsamiq. These wireframes allowed me to present
      multiple ways of approaching a given problem in shorter segments of time. I
      enjoyed the tighter feedback loop this process afforded compared with the
      longer iteration of a traditional agile process.
    </p>
    <p>
      A typical day would begin with sharing these wireframes with the team
      in the morning, and after some discussion, a clear objective for the day would
      be determined. Later that day, when the objective was delivered, the new
      design was ready to be tested with a select group of actual customers. Depending
      on the feedback from those customers, I would either repeat the process and
      incorporate that feedback into another set of low fidelity wireframes, or
      polish the existing design and we would deploy to production.
    </p>
    <p>
      Being a remote team spread across Chicago, Berkeley, and Copenhagen,
      communication was a challenge. We found that using a combination of Hipchat,
      Jira, and Google Hangouts helped facilitate better communication within the
      team.
    </p>
    <img src="/work/projects/assets/ws-predictions.png" />
    <p class="caption">Screenshot of Predictions on the Wise Support dashboard.</p>
    <h5>What I learned</h5>
    <p>
      Because this was the first application built in Python that I had worked on,
      I was exposed to and learned about the Python web application ecosystem. It
      was also my first experience working in a data-heavy project with a strong
      focus on data visualization. To help facilitate the data visualization, I
      learned how to navigate and design a rich Angular and d3.js based client-side
      application.
    </p>
    <p>
      This experience opened my eyes to the fun and interesting world of data
      visualization, and I am currently learning d3.js in my spare time.
    </p>
    <a href="http://support.wise.io">http://support.wise.io</a>
  </div>
</div>

<%= partial "partials/footer" %>
